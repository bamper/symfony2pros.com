{% extends "ProtonQnABundle::layout.html.twig" %}

{% block title %}Question - {{ question.title }}{% endblock %}

{% from "ProtonUserBundle::macros.html.twig" import placard %}
{% from "ProtonCoreBundle::macros.html.twig" import time_formatter %}

{% block content %}
<div id="question-meta" class="well">
    <h1>{{ question.title }}</h1>
    {{ placard(question.author) }}
    <p>{{ time_formatter(question.createdat, 'Asked') }}</p>
{% set views = question.views %}
    <p>{% transchoice views %}
        {0} 0 views|{1} 1 view|]1,Inf] %views% views
    {% endtranschoice %}</p>
    <p>
{% if canEdit %}
        <a class="btn" href="{{ path('proton_qna_questions_edit', {'id': question.id}) }}">Edit</a>
{% endif %}
{% if is_granted('ROLE_ADMIN') %}
        <a class="btn danger" href="{{ path('proton_qna_questions_delete', {'id': question.id}) }}">Trash</a>
{% endif %}
    </p>
</div>
{{ question.content|markdown }}

<hr />

<div id="answers-list">
{% set count = question.answers|length %}
    <h1>{% transchoice count %}
        {0} 0 Answers|{1} 1 Answer|]1,Inf] %count% Answers
{% endtranschoice %}</h1>
{% for answer in question.answers %}
    <div id="answer-{{ answer.id }}" class="answer answer-{{ answer.id }}">
        {{ placard(answer.author) }}
        <p>{{ time_formatter(answer.createdat, 'Answered') }}</p>
        {{ answer.content|markdown }}
    </div>
{% endfor %}
{% if canAnswer %}
        {% render "ProtonQnABundle:Answer:new" with {'question': question} %}
{% endif %}
{% if answer is defined %}
        {% render "ProtonQnABundle:Answer:edit" with {'answer': answer} %}
{% endif %}
</div>
{% endblock %}